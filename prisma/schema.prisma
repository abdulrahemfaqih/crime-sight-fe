// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model WaktuKejadian {
  id                String   @id @default(uuid())
  waktu_kejadian    String
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("waktu_kejadian")
}

model Terdakwa {
  id             String           @id @default(uuid())
  nama_lengkap   String
  jenis_kelamin  String
  alamat         String
  tempat_lahir   String
  pekerjaan      String?
  umur           Int?
  kebangsaan     String?
  agama          String?
  putusan_detail PutusanDetail[] 
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt

  @@index([nama_lengkap])
  @@map("terdakwa")
}

model Putusan {
  id                   String           @id @default(uuid())
  nomor_putusan        String           @unique
  uri_dokumen          String?
  judul_putusan        String
  tahun                Int
  lembaga_peradilan    String
  panitera             String?
  jenis_kejahatan      String?
  alamat_kejadian      String?
  status_tahanan       String?
  lama_tahanan         String?
  barang_bukti         String?
  lokasi_kejadian_id   String?
  lokasi_kejadian      LokasiKejadian?  @relation(fields: [lokasi_kejadian_id], references: [id])
  hakim                Hakim[]
  putusan_detail       PutusanDetail[]
  log_history          LogHistory[]
  tanggal_upload       DateTime?
  tanggal_musyawarah   DateTime?
  tanggal_dibacakan    DateTime?
  vonis_hukuman        String?
  created_at           DateTime         @default(now())
  updated_at           DateTime         @updatedAt

  @@index([nomor_putusan])
  @@index([lokasi_kejadian_id])
  @@map("putusan")
}

model PutusanDetail {
  id                String        @id @default(uuid())
  nomor_putusan     String
  terdakwa_id       String?
  penasihat_id      String?
  hakim_id          String?
  penuntut_umum_id  String?       
  putusan           Putusan?      @relation(fields: [nomor_putusan], references: [nomor_putusan])
  terdakwa          Terdakwa?     @relation(fields: [terdakwa_id], references: [id])
  penasihat         Penasihat?    @relation(fields: [penasihat_id], references: [id])
  hakim             Hakim?        @relation(fields: [hakim_id], references: [id])
  penuntut_umum     PenuntutUmum? @relation(fields: [penuntut_umum_id], references: [id])
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@map("putusan_detail")
}

model PenuntutUmum {
  id              String        @id @default(uuid())
  nama_penuntut   String
  putusan_detail  PutusanDetail[]
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt

  @@map("penuntut_umum")
}

model Penasihat {
  id               String           @id @default(uuid())
  nama_penasihat   String
  putusan_detail   PutusanDetail[]
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt

  @@map("penasihat")
}

model Hakim {
  id             String           @id @default(uuid())
  nama_hakim     String
  jabatan        String
  putusan        Putusan[]
  putusan_detail PutusanDetail[]
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt

  @@map("hakim")
}

model Users {
  id           String        @id @default(uuid())
  nama_lengkap String
  email        String        @unique
  password     String
  role         String        @default("user")
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  sesi_chat    SesiChat[]
  log_history  LogHistory[]

  @@map("users")
}

model LokasiKejadian {
  id               String           @id @default(uuid())
  nama_lokasi      String
  putusan          Putusan[]
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt

  @@map("lokasi_kejadian")
}

model Provinsi {
  id             String        @id @default(uuid())
  kode_provinsi  String        @unique
  nama_provinsi  String
  kabupaten      Kabupaten[]
  lang           Float?
  lat            Float?
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt

  @@index([nama_provinsi])
  @@map("provinsi") 
}

model Kabupaten {
  id              String      @id @default(uuid())
  kode_provinsi   String
  kode_kabupaten  String      @unique
  nama_kabupaten  String
  provinsi        Provinsi    @relation(fields: [kode_provinsi], references: [kode_provinsi])
  lang            Float?
  lat             Float?
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt

  @@index([nama_kabupaten])
  @@map("kabupaten")
}

model SesiChat {
  id                String        @id @default(uuid())
  user_id           String
  user              Users         @relation(fields: [user_id], references: [id])
  judul             String        @default("Percakapan Baru")
  is_active         Boolean       @default(true)
  created_at        DateTime      @default(now())
  ended_at          DateTime?
  ip_address        String?
  user_agent        String?
  referensi_dokumen Json?
  messages          PesanChat[]
  log_history       LogHistory[]

  @@index([user_id])
  @@index([created_at])
  @@map("sesi_chat")
}

model PesanChat {
  id              String        @id @default(uuid())
  session_id      String
  session         SesiChat      @relation(fields: [session_id], references: [id])
  content         String
  is_user_message Boolean       // true untuk user, false untuk bot
  timestamp       DateTime      @default(now())
  intent          String?
  entities        Json?
  uri_dokumen     Json?

  @@index([session_id])
  @@index([timestamp])
  @@map("pesan_chat")
}

model LogHistory {
  id                String        @id @default(uuid())
  user_id           String
  user              Users         @relation(fields: [user_id], references: [id])
  tipe_aktivitas    ActivityType  @default(CHAT_SESSION)
  detail_aktivitas  Json?
  nomor_putusan     String?
  putusan           Putusan?      @relation(fields: [nomor_putusan], references: [id])
  search_query      String?
  sesi_chat_id      String?       @unique
  sesi_chat         SesiChat?     @relation(fields: [sesi_chat_id], references: [id])
  ip_address        String?
  user_agent        String?
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt

  @@index([user_id])
  @@index([tipe_aktivitas])
  @@index([created_at])
  @@map("log_history")
}

enum ActivityType {
  CHAT_SESSION     // Sesi percakapan dengan chatbot
  DOCUMENT_UPLOAD  // Upload dokumen
  DOCUMENT_SEARCH  // Pencarian dokumen
}
